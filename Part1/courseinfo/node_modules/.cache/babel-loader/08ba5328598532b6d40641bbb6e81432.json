{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\FullStackOpen\\\\part1\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.part, \" \", props.exercises]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Part;\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Header;\n\nconst Content = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      part: \"Fundamentals of React\",\n      exercises: \"10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: \"Using props to pass data\",\n      exercises: \"7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: \"State of a component\",\n      exercises: \"14\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of excercises\", \" \", parseInt(props.one) + parseInt(props.two) + parseInt(props.three)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c4 = Total;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: \"Half Stack application development\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      one: \"10\",\n      two: \"7\",\n      three: \"14\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c5 = App;\nexport default App;\n/*\narrow function with statements except return\nconst funcName = () => {\n  yada yada yada yada\n  return(\n    yada yada yada yada\n  )\n}\n==========================================\narrow function with just return statement\nconst funcName = () => (\n  write your return content here\n)\n\nsome noteworthy points:\n1. React components name should always be capitalized\n2. in every react component there must be root element containing all the stuff of the component\nhowever the root element can be nameless or just <> and </>\n\n*/\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Part\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["D:/Code/FullStackOpen/part1/src/App.js"],"names":["React","Part","props","part","exercises","Header","name","Content","Total","parseInt","one","two","three","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE;AAAA,2BACE;AAAA,iBACGA,KAAK,CAACC,IADT,OACgBD,KAAK,CAACE,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CARD;;KAAMH,I;;AASN,MAAMI,MAAM,GAAIH,KAAD,IAAW;AACxB,sBACE;AAAA,2BACE;AAAA,gBAAKA,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAND;;MAAMD,M;;AAON,MAAME,OAAO,GAAG,MAAM;AACpB,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,uBAAX;AAAmC,MAAA,SAAS,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,0BAAX;AAAsC,MAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,sBAAX;AAAkC,MAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CARD;;MAAMA,O;;AASN,MAAMC,KAAK,GAAIN,KAAD,IAAW;AACvB,sBACE;AAAA,2BACE;AAAA,yCACuB,GADvB,EAEGO,QAAQ,CAACP,KAAK,CAACQ,GAAP,CAAR,GAAsBD,QAAQ,CAACP,KAAK,CAACS,GAAP,CAA9B,GAA4CF,QAAQ,CAACP,KAAK,CAACU,KAAP,CAFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD,CATD;;MAAMJ,K;;AAWN,MAAMK,GAAG,GAAG,MAAM;AAChB,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAC,IAAX;AAAgB,MAAA,GAAG,EAAC,GAApB;AAAwB,MAAA,KAAK,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CARD;;MAAMA,G;AAUN,eAAeA,GAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n\nconst Part = (props) => {\n  return (\n    <>\n      <p>\n        {props.part} {props.exercises}\n      </p>\n    </>\n  );\n};\nconst Header = (props) => {\n  return (\n    <>\n      <h1>{props.name}</h1>\n    </>\n  );\n};\nconst Content = () => {\n  return (\n    <>\n      <Part part=\"Fundamentals of React\" exercises=\"10\" />\n      <Part part=\"Using props to pass data\" exercises=\"7\" />\n      <Part part=\"State of a component\" exercises=\"14\" />\n    </>\n  );\n};\nconst Total = (props) => {\n  return (\n    <>\n      <p>\n        Number of excercises{\" \"}\n        {parseInt(props.one) + parseInt(props.two) + parseInt(props.three)}\n      </p>\n    </>\n  );\n};\n\nconst App = () => {\n  return (\n    <>\n      <Header name=\"Half Stack application development\" />\n      <Content />\n      <Total one=\"10\" two=\"7\" three=\"14\" />\n    </>\n  );\n};\n\nexport default App;\n/*\narrow function with statements except return\nconst funcName = () => {\n  yada yada yada yada\n  return(\n    yada yada yada yada\n  )\n}\n==========================================\narrow function with just return statement\nconst funcName = () => (\n  write your return content here\n)\n\nsome noteworthy points:\n1. React components name should always be capitalized\n2. in every react component there must be root element containing all the stuff of the component\nhowever the root element can be nameless or just <> and </>\n\n*/\n"]},"metadata":{},"sourceType":"module"}